/*
 * generated by Xtext
 */
grammar InternalGeoJSON;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package io.mapzone.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package io.mapzone.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import io.mapzone.services.GeoJSONGrammarAccess;

}

@parser::members {
 
 	private GeoJSONGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(GeoJSONGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleGeoJSON
entryRuleGeoJSON 
:
{ before(grammarAccess.getGeoJSONRule()); }
	 ruleGeoJSON
{ after(grammarAccess.getGeoJSONRule()); } 
	 EOF 
;

// Rule GeoJSON
ruleGeoJSON
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGeoJSONAccess().getGroup()); }
(rule__GeoJSON__Group__0)
{ after(grammarAccess.getGeoJSONAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCRS
entryRuleCRS 
:
{ before(grammarAccess.getCRSRule()); }
	 ruleCRS
{ after(grammarAccess.getCRSRule()); } 
	 EOF 
;

// Rule CRS
ruleCRS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCRSAccess().getGroup()); }
(rule__CRS__Group__0)
{ after(grammarAccess.getCRSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCoordList
entryRuleCoordList 
:
{ before(grammarAccess.getCoordListRule()); }
	 ruleCoordList
{ after(grammarAccess.getCoordListRule()); } 
	 EOF 
;

// Rule CoordList
ruleCoordList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCoordListAccess().getGroup()); }
(rule__CoordList__Group__0)
{ after(grammarAccess.getCoordListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGeometry
entryRuleGeometry 
:
{ before(grammarAccess.getGeometryRule()); }
	 ruleGeometry
{ after(grammarAccess.getGeometryRule()); } 
	 EOF 
;

// Rule Geometry
ruleGeometry
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGeometryAccess().getGroup()); }
(rule__Geometry__Group__0)
{ after(grammarAccess.getGeometryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCoord
entryRuleCoord 
:
{ before(grammarAccess.getCoordRule()); }
	 ruleCoord
{ after(grammarAccess.getCoordRule()); } 
	 EOF 
;

// Rule Coord
ruleCoord
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCoordAccess().getAlternatives()); }
(rule__Coord__Alternatives)
{ after(grammarAccess.getCoordAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCoordArray
entryRuleCoordArray 
:
{ before(grammarAccess.getCoordArrayRule()); }
	 ruleCoordArray
{ after(grammarAccess.getCoordArrayRule()); } 
	 EOF 
;

// Rule CoordArray
ruleCoordArray
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCoordArrayAccess().getGroup()); }
(rule__CoordArray__Group__0)
{ after(grammarAccess.getCoordArrayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStyle
entryRuleStyle 
:
{ before(grammarAccess.getStyleRule()); }
	 ruleStyle
{ after(grammarAccess.getStyleRule()); } 
	 EOF 
;

// Rule Style
ruleStyle
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStyleAccess().getGroup()); }
(rule__Style__Group__0)
{ after(grammarAccess.getStyleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeature
entryRuleFeature 
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureAccess().getGroup()); }
(rule__Feature__Group__0)
{ after(grammarAccess.getFeatureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStruct
entryRuleStruct 
:
{ before(grammarAccess.getStructRule()); }
	 ruleStruct
{ after(grammarAccess.getStructRule()); } 
	 EOF 
;

// Rule Struct
ruleStruct
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructAccess().getGroup()); }
(rule__Struct__Group__0)
{ after(grammarAccess.getStructAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperty
entryRuleProperty 
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyAccess().getGroup()); }
(rule__Property__Group__0)
{ after(grammarAccess.getPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArray
entryRuleArray 
:
{ before(grammarAccess.getArrayRule()); }
	 ruleArray
{ after(grammarAccess.getArrayRule()); } 
	 EOF 
;

// Rule Array
ruleArray
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayAccess().getGroup()); }
(rule__Array__Group__0)
{ after(grammarAccess.getArrayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNINT
entryRuleNINT 
:
{ before(grammarAccess.getNINTRule()); }
	 ruleNINT
{ after(grammarAccess.getNINTRule()); } 
	 EOF 
;

// Rule NINT
ruleNINT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNINTAccess().getGroup()); }
(rule__NINT__Group__0)
{ after(grammarAccess.getNINTAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDOUBLE
entryRuleDOUBLE 
:
{ before(grammarAccess.getDOUBLERule()); }
	 ruleDOUBLE
{ after(grammarAccess.getDOUBLERule()); } 
	 EOF 
;

// Rule DOUBLE
ruleDOUBLE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDOUBLEAccess().getGroup()); }
(rule__DOUBLE__Group__0)
{ after(grammarAccess.getDOUBLEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule CRSType
ruleCRSType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSTypeAccess().getAlternatives()); }
(rule__CRSType__Alternatives)
{ after(grammarAccess.getCRSTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule LinkCRSType
ruleLinkCRSType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkCRSTypeAccess().getAlternatives()); }
(rule__LinkCRSType__Alternatives)
{ after(grammarAccess.getLinkCRSTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule GeometryType
ruleGeometryType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeometryTypeAccess().getAlternatives()); }
(rule__GeometryType__Alternatives)
{ after(grammarAccess.getGeometryTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__GeoJSON__Alternatives_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getGroup_1_3_0()); }
(rule__GeoJSON__Group_1_3_0__0)
{ after(grammarAccess.getGeoJSONAccess().getGroup_1_3_0()); }
)

    |(
{ before(grammarAccess.getGeoJSONAccess().getGroup_1_3_1()); }
(rule__GeoJSON__Group_1_3_1__0)
{ after(grammarAccess.getGeoJSONAccess().getGroup_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__Alternatives_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getGroup_8_0()); }
(rule__CRS__Group_8_0__0)
{ after(grammarAccess.getCRSAccess().getGroup_8_0()); }
)

    |(
{ before(grammarAccess.getCRSAccess().getGroup_8_1()); }
(rule__CRS__Group_8_1__0)
{ after(grammarAccess.getCRSAccess().getGroup_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Coord__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordAccess().getCoordListParserRuleCall_0()); }
	ruleCoordList
{ after(grammarAccess.getCoordAccess().getCoordListParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCoordAccess().getCoordArrayParserRuleCall_1()); }
	ruleCoordArray
{ after(grammarAccess.getCoordAccess().getCoordArrayParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getIntValueAssignment_0()); }
(rule__Value__IntValueAssignment_0)
{ after(grammarAccess.getValueAccess().getIntValueAssignment_0()); }
)

    |(
{ before(grammarAccess.getValueAccess().getNintValueAssignment_1()); }
(rule__Value__NintValueAssignment_1)
{ after(grammarAccess.getValueAccess().getNintValueAssignment_1()); }
)

    |(
{ before(grammarAccess.getValueAccess().getDoubleValueAssignment_2()); }
(rule__Value__DoubleValueAssignment_2)
{ after(grammarAccess.getValueAccess().getDoubleValueAssignment_2()); }
)

    |(
{ before(grammarAccess.getValueAccess().getStringValueAssignment_3()); }
(rule__Value__StringValueAssignment_3)
{ after(grammarAccess.getValueAccess().getStringValueAssignment_3()); }
)

    |(
{ before(grammarAccess.getValueAccess().getArrayValueAssignment_4()); }
(rule__Value__ArrayValueAssignment_4)
{ after(grammarAccess.getValueAccess().getArrayValueAssignment_4()); }
)

    |(
{ before(grammarAccess.getValueAccess().getStructValueAssignment_5()); }
(rule__Value__StructValueAssignment_5)
{ after(grammarAccess.getValueAccess().getStructValueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0_0()); }
	RULE_INT
{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getDOUBLEAccess().getNINTParserRuleCall_0_1()); }
	ruleNINT
{ after(grammarAccess.getDOUBLEAccess().getNINTParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getPOINTEnumLiteralDeclaration_0()); }
(	'"Point"' 
)
{ after(grammarAccess.getTypeAccess().getPOINTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getMULTI_POINTEnumLiteralDeclaration_1()); }
(	'"MultiPoint"' 
)
{ after(grammarAccess.getTypeAccess().getMULTI_POINTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getLINE_STRINGEnumLiteralDeclaration_2()); }
(	'"LineString"' 
)
{ after(grammarAccess.getTypeAccess().getLINE_STRINGEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getMULTI_LINE_STRINGEnumLiteralDeclaration_3()); }
(	'"MultiLineString"' 
)
{ after(grammarAccess.getTypeAccess().getMULTI_LINE_STRINGEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getPOLYGONEnumLiteralDeclaration_4()); }
(	'"Polygon"' 
)
{ after(grammarAccess.getTypeAccess().getPOLYGONEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getMULTI_POLYGONEnumLiteralDeclaration_5()); }
(	'"MultiPolygon"' 
)
{ after(grammarAccess.getTypeAccess().getMULTI_POLYGONEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGEOMETRY_COLLECTIONEnumLiteralDeclaration_6()); }
(	'"GeometryCollection"' 
)
{ after(grammarAccess.getTypeAccess().getGEOMETRY_COLLECTIONEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getFEATUREEnumLiteralDeclaration_7()); }
(	'"Feature"' 
)
{ after(grammarAccess.getTypeAccess().getFEATUREEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getFEATURE_COLLECTIONEnumLiteralDeclaration_8()); }
(	'"FeatureCollection"' 
)
{ after(grammarAccess.getTypeAccess().getFEATURE_COLLECTIONEnumLiteralDeclaration_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CRSType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSTypeAccess().getNAMEEnumLiteralDeclaration_0()); }
(	'"name"' 
)
{ after(grammarAccess.getCRSTypeAccess().getNAMEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCRSTypeAccess().getLINKEDEnumLiteralDeclaration_1()); }
(	'"link"' 
)
{ after(grammarAccess.getCRSTypeAccess().getLINKEDEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkCRSType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkCRSTypeAccess().getPROJ4EnumLiteralDeclaration_0()); }
(	'"proj4"' 
)
{ after(grammarAccess.getLinkCRSTypeAccess().getPROJ4EnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getLinkCRSTypeAccess().getOGCWKTEnumLiteralDeclaration_1()); }
(	'"ogcwkt"' 
)
{ after(grammarAccess.getLinkCRSTypeAccess().getOGCWKTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getLinkCRSTypeAccess().getESRIWKTEnumLiteralDeclaration_2()); }
(	'"esriwkt"' 
)
{ after(grammarAccess.getLinkCRSTypeAccess().getESRIWKTEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GeometryType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeometryTypeAccess().getPOINTEnumLiteralDeclaration_0()); }
(	'"Point"' 
)
{ after(grammarAccess.getGeometryTypeAccess().getPOINTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getGeometryTypeAccess().getMULTI_POINTEnumLiteralDeclaration_1()); }
(	'"MultiPoint"' 
)
{ after(grammarAccess.getGeometryTypeAccess().getMULTI_POINTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getGeometryTypeAccess().getLINESTRINGEnumLiteralDeclaration_2()); }
(	'"LineString"' 
)
{ after(grammarAccess.getGeometryTypeAccess().getLINESTRINGEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getGeometryTypeAccess().getMULTI_LINE_STRINGEnumLiteralDeclaration_3()); }
(	'"MultiLineString"' 
)
{ after(grammarAccess.getGeometryTypeAccess().getMULTI_LINE_STRINGEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getGeometryTypeAccess().getPOLYGONEnumLiteralDeclaration_4()); }
(	'"Polygon"' 
)
{ after(grammarAccess.getGeometryTypeAccess().getPOLYGONEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getGeometryTypeAccess().getMULTI_POLYGONEnumLiteralDeclaration_5()); }
(	'"MultiPolygon"' 
)
{ after(grammarAccess.getGeometryTypeAccess().getMULTI_POLYGONEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getGeometryTypeAccess().getGEOMETRY_COLLECTIONEnumLiteralDeclaration_6()); }
(	'"GeometryCollection"' 
)
{ after(grammarAccess.getGeometryTypeAccess().getGEOMETRY_COLLECTIONEnumLiteralDeclaration_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__GeoJSON__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group__0__Impl
	rule__GeoJSON__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getGeoJSONAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group__1__Impl
	rule__GeoJSON__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getUnorderedGroup_1()); }
(rule__GeoJSON__UnorderedGroup_1)
{ after(grammarAccess.getGeoJSONAccess().getUnorderedGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getGeoJSONAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GeoJSON__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_0__0__Impl
	rule__GeoJSON__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getTypeKeyword_1_0_0()); }

	'"type"' 

{ after(grammarAccess.getGeoJSONAccess().getTypeKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_0__1__Impl
	rule__GeoJSON__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getColonKeyword_1_0_1()); }

	':' 

{ after(grammarAccess.getGeoJSONAccess().getColonKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_0__2__Impl
	rule__GeoJSON__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getTypeAssignment_1_0_2()); }
(rule__GeoJSON__TypeAssignment_1_0_2)
{ after(grammarAccess.getGeoJSONAccess().getTypeAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getCommaKeyword_1_0_3()); }
(
	',' 
)?
{ after(grammarAccess.getGeoJSONAccess().getCommaKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__GeoJSON__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_1__0__Impl
	rule__GeoJSON__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getCrsKeyword_1_1_0()); }

	'"crs"' 

{ after(grammarAccess.getGeoJSONAccess().getCrsKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_1__1__Impl
	rule__GeoJSON__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getColonKeyword_1_1_1()); }

	':' 

{ after(grammarAccess.getGeoJSONAccess().getColonKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_1__2__Impl
	rule__GeoJSON__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getCrsAssignment_1_1_2()); }
(rule__GeoJSON__CrsAssignment_1_1_2)
{ after(grammarAccess.getGeoJSONAccess().getCrsAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getCommaKeyword_1_1_3()); }
(
	',' 
)?
{ after(grammarAccess.getGeoJSONAccess().getCommaKeyword_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__GeoJSON__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_2__0__Impl
	rule__GeoJSON__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getBboxKeyword_1_2_0()); }

	'"bbox"' 

{ after(grammarAccess.getGeoJSONAccess().getBboxKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_2__1__Impl
	rule__GeoJSON__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getColonKeyword_1_2_1()); }

	':' 

{ after(grammarAccess.getGeoJSONAccess().getColonKeyword_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_2__2__Impl
	rule__GeoJSON__Group_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getBboxAssignment_1_2_2()); }
(rule__GeoJSON__BboxAssignment_1_2_2)
{ after(grammarAccess.getGeoJSONAccess().getBboxAssignment_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getCommaKeyword_1_2_3()); }
(
	',' 
)?
{ after(grammarAccess.getGeoJSONAccess().getCommaKeyword_1_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__GeoJSON__Group_1_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_3_0__0__Impl
	rule__GeoJSON__Group_1_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getGeometryKeyword_1_3_0_0()); }

	'"geometry"' 

{ after(grammarAccess.getGeoJSONAccess().getGeometryKeyword_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_3_0__1__Impl
	rule__GeoJSON__Group_1_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getColonKeyword_1_3_0_1()); }

	':' 

{ after(grammarAccess.getGeoJSONAccess().getColonKeyword_1_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_3_0__2__Impl
	rule__GeoJSON__Group_1_3_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getGeometryAssignment_1_3_0_2()); }
(rule__GeoJSON__GeometryAssignment_1_3_0_2)
{ after(grammarAccess.getGeoJSONAccess().getGeometryAssignment_1_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_3_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_3_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_3_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getCommaKeyword_1_3_0_3()); }

	',' 

{ after(grammarAccess.getGeoJSONAccess().getCommaKeyword_1_3_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__GeoJSON__Group_1_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_3_1__0__Impl
	rule__GeoJSON__Group_1_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getGeometriesKeyword_1_3_1_0()); }

	'"geometries"' 

{ after(grammarAccess.getGeoJSONAccess().getGeometriesKeyword_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_3_1__1__Impl
	rule__GeoJSON__Group_1_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getColonKeyword_1_3_1_1()); }

	':' 

{ after(grammarAccess.getGeoJSONAccess().getColonKeyword_1_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_3_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_3_1__2__Impl
	rule__GeoJSON__Group_1_3_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_3_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getGeometryAssignment_1_3_1_2()); }
(rule__GeoJSON__GeometryAssignment_1_3_1_2)
{ after(grammarAccess.getGeoJSONAccess().getGeometryAssignment_1_3_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_3_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_3_1__3__Impl
	rule__GeoJSON__Group_1_3_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_3_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getGeoJSONAccess().getGroup_1_3_1_3()); }
(rule__GeoJSON__Group_1_3_1_3__0)
{ after(grammarAccess.getGeoJSONAccess().getGroup_1_3_1_3()); }
)
(
{ before(grammarAccess.getGeoJSONAccess().getGroup_1_3_1_3()); }
(rule__GeoJSON__Group_1_3_1_3__0)*
{ after(grammarAccess.getGeoJSONAccess().getGroup_1_3_1_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_3_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_3_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_3_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getCommaKeyword_1_3_1_4()); }
(
	',' 
)?
{ after(grammarAccess.getGeoJSONAccess().getCommaKeyword_1_3_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__GeoJSON__Group_1_3_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_3_1_3__0__Impl
	rule__GeoJSON__Group_1_3_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_3_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getCommaKeyword_1_3_1_3_0()); }

	',' 

{ after(grammarAccess.getGeoJSONAccess().getCommaKeyword_1_3_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_3_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_3_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_3_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getGeometryAssignment_1_3_1_3_1()); }
(rule__GeoJSON__GeometryAssignment_1_3_1_3_1)
{ after(grammarAccess.getGeoJSONAccess().getGeometryAssignment_1_3_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GeoJSON__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_4__0__Impl
	rule__GeoJSON__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getFlatPropertiesAssignment_1_4_0()); }
(rule__GeoJSON__FlatPropertiesAssignment_1_4_0)
{ after(grammarAccess.getGeoJSONAccess().getFlatPropertiesAssignment_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getCommaKeyword_1_4_1()); }
(
	',' 
)?
{ after(grammarAccess.getGeoJSONAccess().getCommaKeyword_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GeoJSON__Group_1_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_5__0__Impl
	rule__GeoJSON__Group_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getPropertiesKeyword_1_5_0()); }

	'"properties"' 

{ after(grammarAccess.getGeoJSONAccess().getPropertiesKeyword_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_5__1__Impl
	rule__GeoJSON__Group_1_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getColonKeyword_1_5_1()); }

	':' 

{ after(grammarAccess.getGeoJSONAccess().getColonKeyword_1_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_5__2__Impl
	rule__GeoJSON__Group_1_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getPropertiesAssignment_1_5_2()); }
(rule__GeoJSON__PropertiesAssignment_1_5_2)
{ after(grammarAccess.getGeoJSONAccess().getPropertiesAssignment_1_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getCommaKeyword_1_5_3()); }
(
	',' 
)?
{ after(grammarAccess.getGeoJSONAccess().getCommaKeyword_1_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__GeoJSON__Group_1_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_6__0__Impl
	rule__GeoJSON__Group_1_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getStyleKeyword_1_6_0()); }

	'"style"' 

{ after(grammarAccess.getGeoJSONAccess().getStyleKeyword_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_6__1__Impl
	rule__GeoJSON__Group_1_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getColonKeyword_1_6_1()); }

	':' 

{ after(grammarAccess.getGeoJSONAccess().getColonKeyword_1_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_6__2__Impl
	rule__GeoJSON__Group_1_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getStyleAssignment_1_6_2()); }
(rule__GeoJSON__StyleAssignment_1_6_2)
{ after(grammarAccess.getGeoJSONAccess().getStyleAssignment_1_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getCommaKeyword_1_6_3()); }
(
	',' 
)?
{ after(grammarAccess.getGeoJSONAccess().getCommaKeyword_1_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__GeoJSON__Group_1_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_7__0__Impl
	rule__GeoJSON__Group_1_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getFeaturesKeyword_1_7_0()); }

	'"features"' 

{ after(grammarAccess.getGeoJSONAccess().getFeaturesKeyword_1_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_7__1__Impl
	rule__GeoJSON__Group_1_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getColonKeyword_1_7_1()); }

	':' 

{ after(grammarAccess.getGeoJSONAccess().getColonKeyword_1_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_7__2__Impl
	rule__GeoJSON__Group_1_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getLeftSquareBracketKeyword_1_7_2()); }

	'[' 

{ after(grammarAccess.getGeoJSONAccess().getLeftSquareBracketKeyword_1_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_7__3__Impl
	rule__GeoJSON__Group_1_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getGroup_1_7_3()); }
(rule__GeoJSON__Group_1_7_3__0)?
{ after(grammarAccess.getGeoJSONAccess().getGroup_1_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_7__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_7__4__Impl
	rule__GeoJSON__Group_1_7__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_7__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getRightSquareBracketKeyword_1_7_4()); }

	']' 

{ after(grammarAccess.getGeoJSONAccess().getRightSquareBracketKeyword_1_7_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_7__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_7__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_7__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getCommaKeyword_1_7_5()); }
(
	',' 
)?
{ after(grammarAccess.getGeoJSONAccess().getCommaKeyword_1_7_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__GeoJSON__Group_1_7_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_7_3__0__Impl
	rule__GeoJSON__Group_1_7_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_7_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getFeaturesAssignment_1_7_3_0()); }
(rule__GeoJSON__FeaturesAssignment_1_7_3_0)
{ after(grammarAccess.getGeoJSONAccess().getFeaturesAssignment_1_7_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_7_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_7_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_7_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getGroup_1_7_3_1()); }
(rule__GeoJSON__Group_1_7_3_1__0)*
{ after(grammarAccess.getGeoJSONAccess().getGroup_1_7_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GeoJSON__Group_1_7_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_7_3_1__0__Impl
	rule__GeoJSON__Group_1_7_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_7_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getCommaKeyword_1_7_3_1_0()); }

	',' 

{ after(grammarAccess.getGeoJSONAccess().getCommaKeyword_1_7_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__Group_1_7_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__Group_1_7_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__Group_1_7_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getFeaturesAssignment_1_7_3_1_1()); }
(rule__GeoJSON__FeaturesAssignment_1_7_3_1_1)
{ after(grammarAccess.getGeoJSONAccess().getFeaturesAssignment_1_7_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CRS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRS__Group__0__Impl
	rule__CRS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getCRSAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRS__Group__1__Impl
	rule__CRS__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getTypeKeyword_1()); }

	'"type"' 

{ after(grammarAccess.getCRSAccess().getTypeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRS__Group__2__Impl
	rule__CRS__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getCRSAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRS__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRS__Group__3__Impl
	rule__CRS__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getTypeAssignment_3()); }
(rule__CRS__TypeAssignment_3)
{ after(grammarAccess.getCRSAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRS__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRS__Group__4__Impl
	rule__CRS__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getCRSAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRS__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRS__Group__5__Impl
	rule__CRS__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getPropertiesKeyword_5()); }

	'"properties"' 

{ after(grammarAccess.getCRSAccess().getPropertiesKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRS__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRS__Group__6__Impl
	rule__CRS__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getColonKeyword_6()); }

	':' 

{ after(grammarAccess.getCRSAccess().getColonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRS__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRS__Group__7__Impl
	rule__CRS__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getLeftCurlyBracketKeyword_7()); }

	'{' 

{ after(grammarAccess.getCRSAccess().getLeftCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRS__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRS__Group__8__Impl
	rule__CRS__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getAlternatives_8()); }
(rule__CRS__Alternatives_8)
{ after(grammarAccess.getCRSAccess().getAlternatives_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRS__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRS__Group__9__Impl
	rule__CRS__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getCRSAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRS__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRS__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getCRSAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__CRS__Group_8_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRS__Group_8_0__0__Impl
	rule__CRS__Group_8_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__Group_8_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getNameKeyword_8_0_0()); }

	'"name"' 

{ after(grammarAccess.getCRSAccess().getNameKeyword_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRS__Group_8_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRS__Group_8_0__1__Impl
	rule__CRS__Group_8_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__Group_8_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getColonKeyword_8_0_1()); }

	':' 

{ after(grammarAccess.getCRSAccess().getColonKeyword_8_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRS__Group_8_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRS__Group_8_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__Group_8_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getNameAssignment_8_0_2()); }
(rule__CRS__NameAssignment_8_0_2)
{ after(grammarAccess.getCRSAccess().getNameAssignment_8_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CRS__Group_8_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRS__Group_8_1__0__Impl
	rule__CRS__Group_8_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__Group_8_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getHrefKeyword_8_1_0()); }

	'"href"' 

{ after(grammarAccess.getCRSAccess().getHrefKeyword_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRS__Group_8_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRS__Group_8_1__1__Impl
	rule__CRS__Group_8_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__Group_8_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getColonKeyword_8_1_1()); }

	':' 

{ after(grammarAccess.getCRSAccess().getColonKeyword_8_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRS__Group_8_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRS__Group_8_1__2__Impl
	rule__CRS__Group_8_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__Group_8_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getSTRINGTerminalRuleCall_8_1_2()); }
	RULE_STRING
{ after(grammarAccess.getCRSAccess().getSTRINGTerminalRuleCall_8_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRS__Group_8_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRS__Group_8_1__3__Impl
	rule__CRS__Group_8_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__Group_8_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getCommaKeyword_8_1_3()); }

	',' 

{ after(grammarAccess.getCRSAccess().getCommaKeyword_8_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRS__Group_8_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRS__Group_8_1__4__Impl
	rule__CRS__Group_8_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__Group_8_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getTypeKeyword_8_1_4()); }

	'"type"' 

{ after(grammarAccess.getCRSAccess().getTypeKeyword_8_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRS__Group_8_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRS__Group_8_1__5__Impl
	rule__CRS__Group_8_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__Group_8_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getColonKeyword_8_1_5()); }

	':' 

{ after(grammarAccess.getCRSAccess().getColonKeyword_8_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRS__Group_8_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRS__Group_8_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__Group_8_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getLinkCRSTypeAssignment_8_1_6()); }
(rule__CRS__LinkCRSTypeAssignment_8_1_6)
{ after(grammarAccess.getCRSAccess().getLinkCRSTypeAssignment_8_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__CoordList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordList__Group__0__Impl
	rule__CoordList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordListAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getCoordListAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordList__Group__1__Impl
	rule__CoordList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordListAccess().getCoordsAssignment_1()); }
(rule__CoordList__CoordsAssignment_1)
{ after(grammarAccess.getCoordListAccess().getCoordsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordList__Group__2__Impl
	rule__CoordList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordListAccess().getGroup_2()); }
(rule__CoordList__Group_2__0)*
{ after(grammarAccess.getCoordListAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordList__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordList__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordListAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getCoordListAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CoordList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordList__Group_2__0__Impl
	rule__CoordList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordList__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordListAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getCoordListAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordList__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordListAccess().getCoordsAssignment_2_1()); }
(rule__CoordList__CoordsAssignment_2_1)
{ after(grammarAccess.getCoordListAccess().getCoordsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Geometry__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Geometry__Group__0__Impl
	rule__Geometry__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeometryAccess().getGeometryAction_0()); }
(

)
{ after(grammarAccess.getGeometryAccess().getGeometryAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Geometry__Group__1__Impl
	rule__Geometry__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeometryAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getGeometryAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Geometry__Group__2__Impl
	rule__Geometry__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeometryAccess().getTypeKeyword_2()); }

	'"type"' 

{ after(grammarAccess.getGeometryAccess().getTypeKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Geometry__Group__3__Impl
	rule__Geometry__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeometryAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getGeometryAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Geometry__Group__4__Impl
	rule__Geometry__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeometryAccess().getTypeAssignment_4()); }
(rule__Geometry__TypeAssignment_4)
{ after(grammarAccess.getGeometryAccess().getTypeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Geometry__Group__5__Impl
	rule__Geometry__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeometryAccess().getCommaKeyword_5()); }

	',' 

{ after(grammarAccess.getGeometryAccess().getCommaKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Geometry__Group__6__Impl
	rule__Geometry__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeometryAccess().getCoordinatesKeyword_6()); }

	'"coordinates"' 

{ after(grammarAccess.getGeometryAccess().getCoordinatesKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Geometry__Group__7__Impl
	rule__Geometry__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeometryAccess().getColonKeyword_7()); }

	':' 

{ after(grammarAccess.getGeometryAccess().getColonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Geometry__Group__8__Impl
	rule__Geometry__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeometryAccess().getLeftSquareBracketKeyword_8()); }

	'[' 

{ after(grammarAccess.getGeometryAccess().getLeftSquareBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Geometry__Group__9__Impl
	rule__Geometry__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeometryAccess().getCoordsAssignment_9()); }
(rule__Geometry__CoordsAssignment_9)
{ after(grammarAccess.getGeometryAccess().getCoordsAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Geometry__Group__10__Impl
	rule__Geometry__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeometryAccess().getRightSquareBracketKeyword_10()); }

	']' 

{ after(grammarAccess.getGeometryAccess().getRightSquareBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Geometry__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Geometry__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeometryAccess().getRightCurlyBracketKeyword_11()); }

	'}' 

{ after(grammarAccess.getGeometryAccess().getRightCurlyBracketKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


























rule__CoordArray__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordArray__Group__0__Impl
	rule__CoordArray__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordArray__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordArrayAccess().getCoordArrayAction_0()); }
(

)
{ after(grammarAccess.getCoordArrayAccess().getCoordArrayAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordArray__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordArray__Group__1__Impl
	rule__CoordArray__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordArray__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordArrayAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getCoordArrayAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordArray__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordArray__Group__2__Impl
	rule__CoordArray__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordArray__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordArrayAccess().getGroup_2()); }
(rule__CoordArray__Group_2__0)?
{ after(grammarAccess.getCoordArrayAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordArray__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordArray__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordArray__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordArrayAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getCoordArrayAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CoordArray__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordArray__Group_2__0__Impl
	rule__CoordArray__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordArray__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordArrayAccess().getCoordsAssignment_2_0()); }
(rule__CoordArray__CoordsAssignment_2_0)
{ after(grammarAccess.getCoordArrayAccess().getCoordsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordArray__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordArray__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordArray__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordArrayAccess().getGroup_2_1()); }
(rule__CoordArray__Group_2_1__0)*
{ after(grammarAccess.getCoordArrayAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CoordArray__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordArray__Group_2_1__0__Impl
	rule__CoordArray__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordArray__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordArrayAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getCoordArrayAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordArray__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordArray__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordArray__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordArrayAccess().getCoordsAssignment_2_1_1()); }
(rule__CoordArray__CoordsAssignment_2_1_1)
{ after(grammarAccess.getCoordArrayAccess().getCoordsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Style__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Style__Group__0__Impl
	rule__Style__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getStyleAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Style__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Style__Group__1__Impl
	rule__Style__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleAccess().getPropertyAssignment_1()); }
(rule__Style__PropertyAssignment_1)
{ after(grammarAccess.getStyleAccess().getPropertyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Style__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Style__Group__2__Impl
	rule__Style__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleAccess().getGroup_2()); }
(rule__Style__Group_2__0)*
{ after(grammarAccess.getStyleAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Style__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Style__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getStyleAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Style__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Style__Group_2__0__Impl
	rule__Style__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getStyleAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Style__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Style__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleAccess().getPropertyAssignment_2_1()); }
(rule__Style__PropertyAssignment_2_1)
{ after(grammarAccess.getStyleAccess().getPropertyAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Feature__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group__0__Impl
	rule__Feature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getFeatureAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group__1__Impl
	rule__Feature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getGeometryKeyword_1()); }

	'"geometry"' 

{ after(grammarAccess.getFeatureAccess().getGeometryKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group__2__Impl
	rule__Feature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getFeatureAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group__3__Impl
	rule__Feature__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getGeometryAssignment_3()); }
(rule__Feature__GeometryAssignment_3)
{ after(grammarAccess.getFeatureAccess().getGeometryAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group__4__Impl
	rule__Feature__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getFeatureAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group__5__Impl
	rule__Feature__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getPropertiesKeyword_5()); }

	'"properties"' 

{ after(grammarAccess.getFeatureAccess().getPropertiesKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group__6__Impl
	rule__Feature__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getColonKeyword_6()); }

	':' 

{ after(grammarAccess.getFeatureAccess().getColonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group__7__Impl
	rule__Feature__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getPropertiesAssignment_7()); }
(rule__Feature__PropertiesAssignment_7)
{ after(grammarAccess.getFeatureAccess().getPropertiesAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getFeatureAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Struct__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct__Group__0__Impl
	rule__Struct__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructAccess().getStructAction_0()); }
(

)
{ after(grammarAccess.getStructAccess().getStructAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Struct__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct__Group__1__Impl
	rule__Struct__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getStructAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Struct__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct__Group__2__Impl
	rule__Struct__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructAccess().getGroup_2()); }
(rule__Struct__Group_2__0)?
{ after(grammarAccess.getStructAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Struct__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getStructAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Struct__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct__Group_2__0__Impl
	rule__Struct__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructAccess().getPropertyAssignment_2_0()); }
(rule__Struct__PropertyAssignment_2_0)
{ after(grammarAccess.getStructAccess().getPropertyAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Struct__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructAccess().getGroup_2_1()); }
(rule__Struct__Group_2_1__0)*
{ after(grammarAccess.getStructAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Struct__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct__Group_2_1__0__Impl
	rule__Struct__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getStructAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Struct__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructAccess().getPropertyAssignment_2_1_1()); }
(rule__Struct__PropertyAssignment_2_1_1)
{ after(grammarAccess.getStructAccess().getPropertyAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Property__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__0__Impl
	rule__Property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getNameAssignment_0()); }
(rule__Property__NameAssignment_0)
{ after(grammarAccess.getPropertyAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__1__Impl
	rule__Property__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getPropertyAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getValueAssignment_2()); }
(rule__Property__ValueAssignment_2)
{ after(grammarAccess.getPropertyAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Array__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__0__Impl
	rule__Array__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getArrayAction_0()); }
(

)
{ after(grammarAccess.getArrayAccess().getArrayAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__1__Impl
	rule__Array__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__2__Impl
	rule__Array__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getGroup_2()); }
(rule__Array__Group_2__0)?
{ after(grammarAccess.getArrayAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Array__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_2__0__Impl
	rule__Array__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getValuesAssignment_2_0()); }
(rule__Array__ValuesAssignment_2_0)
{ after(grammarAccess.getArrayAccess().getValuesAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getGroup_2_1()); }
(rule__Array__Group_2_1__0)*
{ after(grammarAccess.getArrayAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Array__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_2_1__0__Impl
	rule__Array__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getArrayAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getValuesAssignment_2_1_1()); }
(rule__Array__ValuesAssignment_2_1_1)
{ after(grammarAccess.getArrayAccess().getValuesAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NINT__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NINT__Group__0__Impl
	rule__NINT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NINT__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNINTAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getNINTAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NINT__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NINT__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NINT__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNINTAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getNINTAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DOUBLE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group__0__Impl
	rule__DOUBLE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getAlternatives_0()); }
(rule__DOUBLE__Alternatives_0)
{ after(grammarAccess.getDOUBLEAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getGroup_1()); }
(rule__DOUBLE__Group_1__0)
{ after(grammarAccess.getDOUBLEAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DOUBLE__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group_1__0__Impl
	rule__DOUBLE__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getDOUBLEAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__GeoJSON__UnorderedGroup_1
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getGeoJSONAccess().getUnorderedGroup_1());
    }
:
	rule__GeoJSON__UnorderedGroup_1__0
	
	{getUnorderedGroupHelper().canLeave(grammarAccess.getGeoJSONAccess().getUnorderedGroup_1())}?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getGeoJSONAccess().getUnorderedGroup_1());
	restoreStackSize(stackSize);
}


rule__GeoJSON__UnorderedGroup_1__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGeoJSONAccess().getUnorderedGroup_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGeoJSONAccess().getUnorderedGroup_1(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getGeoJSONAccess().getGroup_1_0()); }
						(rule__GeoJSON__Group_1_0__0)
						{ after(grammarAccess.getGeoJSONAccess().getGroup_1_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGeoJSONAccess().getUnorderedGroup_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGeoJSONAccess().getUnorderedGroup_1(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getGeoJSONAccess().getGroup_1_1()); }
						(rule__GeoJSON__Group_1_1__0)
						{ after(grammarAccess.getGeoJSONAccess().getGroup_1_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGeoJSONAccess().getUnorderedGroup_1(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGeoJSONAccess().getUnorderedGroup_1(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getGeoJSONAccess().getGroup_1_2()); }
						(rule__GeoJSON__Group_1_2__0)
						{ after(grammarAccess.getGeoJSONAccess().getGroup_1_2()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGeoJSONAccess().getUnorderedGroup_1(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGeoJSONAccess().getUnorderedGroup_1(), 3);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getGeoJSONAccess().getAlternatives_1_3()); }
						(rule__GeoJSON__Alternatives_1_3)
						{ after(grammarAccess.getGeoJSONAccess().getAlternatives_1_3()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGeoJSONAccess().getUnorderedGroup_1(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGeoJSONAccess().getUnorderedGroup_1(), 4);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					(
						{ before(grammarAccess.getGeoJSONAccess().getGroup_1_4()); }
						(rule__GeoJSON__Group_1_4__0)
						{ after(grammarAccess.getGeoJSONAccess().getGroup_1_4()); }
					)
					(
						{ before(grammarAccess.getGeoJSONAccess().getGroup_1_4()); }
						((rule__GeoJSON__Group_1_4__0)=>rule__GeoJSON__Group_1_4__0)*
						{ after(grammarAccess.getGeoJSONAccess().getGroup_1_4()); }
					)					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGeoJSONAccess().getUnorderedGroup_1(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGeoJSONAccess().getUnorderedGroup_1(), 5);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getGeoJSONAccess().getGroup_1_5()); }
						(rule__GeoJSON__Group_1_5__0)
						{ after(grammarAccess.getGeoJSONAccess().getGroup_1_5()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGeoJSONAccess().getUnorderedGroup_1(), 6)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGeoJSONAccess().getUnorderedGroup_1(), 6);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getGeoJSONAccess().getGroup_1_6()); }
						(rule__GeoJSON__Group_1_6__0)
						{ after(grammarAccess.getGeoJSONAccess().getGroup_1_6()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGeoJSONAccess().getUnorderedGroup_1(), 7)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGeoJSONAccess().getUnorderedGroup_1(), 7);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getGeoJSONAccess().getGroup_1_7()); }
						(rule__GeoJSON__Group_1_7__0)
						{ after(grammarAccess.getGeoJSONAccess().getGroup_1_7()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGeoJSONAccess().getUnorderedGroup_1());
	restoreStackSize(stackSize);
}


rule__GeoJSON__UnorderedGroup_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__UnorderedGroup_1__Impl
	rule__GeoJSON__UnorderedGroup_1__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__UnorderedGroup_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__UnorderedGroup_1__Impl
	rule__GeoJSON__UnorderedGroup_1__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__UnorderedGroup_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__UnorderedGroup_1__Impl
	rule__GeoJSON__UnorderedGroup_1__3?
;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__UnorderedGroup_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__UnorderedGroup_1__Impl
	rule__GeoJSON__UnorderedGroup_1__4?
;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__UnorderedGroup_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__UnorderedGroup_1__Impl
	rule__GeoJSON__UnorderedGroup_1__5?
;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__UnorderedGroup_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__UnorderedGroup_1__Impl
	rule__GeoJSON__UnorderedGroup_1__6?
;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__UnorderedGroup_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__UnorderedGroup_1__Impl
	rule__GeoJSON__UnorderedGroup_1__7?
;
finally {
	restoreStackSize(stackSize);
}


rule__GeoJSON__UnorderedGroup_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeoJSON__UnorderedGroup_1__Impl
;
finally {
	restoreStackSize(stackSize);
}


















rule__GeoJSON__TypeAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getTypeTypeEnumRuleCall_1_0_2_0()); }
	ruleType{ after(grammarAccess.getGeoJSONAccess().getTypeTypeEnumRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__CrsAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getCrsCRSParserRuleCall_1_1_2_0()); }
	ruleCRS{ after(grammarAccess.getGeoJSONAccess().getCrsCRSParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__BboxAssignment_1_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getBboxCoordListParserRuleCall_1_2_2_0()); }
	ruleCoordList{ after(grammarAccess.getGeoJSONAccess().getBboxCoordListParserRuleCall_1_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__GeometryAssignment_1_3_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getGeometryGeometryParserRuleCall_1_3_0_2_0()); }
	ruleGeometry{ after(grammarAccess.getGeoJSONAccess().getGeometryGeometryParserRuleCall_1_3_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__GeometryAssignment_1_3_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getGeometryGeometryParserRuleCall_1_3_1_2_0()); }
	ruleGeometry{ after(grammarAccess.getGeoJSONAccess().getGeometryGeometryParserRuleCall_1_3_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__GeometryAssignment_1_3_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getGeometryGeometryParserRuleCall_1_3_1_3_1_0()); }
	ruleGeometry{ after(grammarAccess.getGeoJSONAccess().getGeometryGeometryParserRuleCall_1_3_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__FlatPropertiesAssignment_1_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getFlatPropertiesPropertyParserRuleCall_1_4_0_0()); }
	ruleProperty{ after(grammarAccess.getGeoJSONAccess().getFlatPropertiesPropertyParserRuleCall_1_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__PropertiesAssignment_1_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getPropertiesStructParserRuleCall_1_5_2_0()); }
	ruleStruct{ after(grammarAccess.getGeoJSONAccess().getPropertiesStructParserRuleCall_1_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__StyleAssignment_1_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getStyleStyleParserRuleCall_1_6_2_0()); }
	ruleStyle{ after(grammarAccess.getGeoJSONAccess().getStyleStyleParserRuleCall_1_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__FeaturesAssignment_1_7_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getFeaturesFeatureParserRuleCall_1_7_3_0_0()); }
	ruleFeature{ after(grammarAccess.getGeoJSONAccess().getFeaturesFeatureParserRuleCall_1_7_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GeoJSON__FeaturesAssignment_1_7_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeoJSONAccess().getFeaturesFeatureParserRuleCall_1_7_3_1_1_0()); }
	ruleFeature{ after(grammarAccess.getGeoJSONAccess().getFeaturesFeatureParserRuleCall_1_7_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getTypeCRSTypeEnumRuleCall_3_0()); }
	ruleCRSType{ after(grammarAccess.getCRSAccess().getTypeCRSTypeEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__NameAssignment_8_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getNameSTRINGTerminalRuleCall_8_0_2_0()); }
	RULE_STRING{ after(grammarAccess.getCRSAccess().getNameSTRINGTerminalRuleCall_8_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CRS__LinkCRSTypeAssignment_8_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRSAccess().getLinkCRSTypeLinkCRSTypeEnumRuleCall_8_1_6_0()); }
	ruleLinkCRSType{ after(grammarAccess.getCRSAccess().getLinkCRSTypeLinkCRSTypeEnumRuleCall_8_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CoordList__CoordsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordListAccess().getCoordsDOUBLEParserRuleCall_1_0()); }
	ruleDOUBLE{ after(grammarAccess.getCoordListAccess().getCoordsDOUBLEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CoordList__CoordsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordListAccess().getCoordsDOUBLEParserRuleCall_2_1_0()); }
	ruleDOUBLE{ after(grammarAccess.getCoordListAccess().getCoordsDOUBLEParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__TypeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeometryAccess().getTypeGeometryTypeEnumRuleCall_4_0()); }
	ruleGeometryType{ after(grammarAccess.getGeometryAccess().getTypeGeometryTypeEnumRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Geometry__CoordsAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeometryAccess().getCoordsCoordParserRuleCall_9_0()); }
	ruleCoord{ after(grammarAccess.getGeometryAccess().getCoordsCoordParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CoordArray__CoordsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordArrayAccess().getCoordsCoordParserRuleCall_2_0_0()); }
	ruleCoord{ after(grammarAccess.getCoordArrayAccess().getCoordsCoordParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CoordArray__CoordsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordArrayAccess().getCoordsCoordParserRuleCall_2_1_1_0()); }
	ruleCoord{ after(grammarAccess.getCoordArrayAccess().getCoordsCoordParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Style__PropertyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleAccess().getPropertyPropertyParserRuleCall_1_0()); }
	ruleProperty{ after(grammarAccess.getStyleAccess().getPropertyPropertyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Style__PropertyAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleAccess().getPropertyPropertyParserRuleCall_2_1_0()); }
	ruleProperty{ after(grammarAccess.getStyleAccess().getPropertyPropertyParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__GeometryAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getGeometryGeometryParserRuleCall_3_0()); }
	ruleGeometry{ after(grammarAccess.getFeatureAccess().getGeometryGeometryParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__PropertiesAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getPropertiesStructParserRuleCall_7_0()); }
	ruleStruct{ after(grammarAccess.getFeatureAccess().getPropertiesStructParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__PropertyAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructAccess().getPropertyPropertyParserRuleCall_2_0_0()); }
	ruleProperty{ after(grammarAccess.getStructAccess().getPropertyPropertyParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__PropertyAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructAccess().getPropertyPropertyParserRuleCall_2_1_1_0()); }
	ruleProperty{ after(grammarAccess.getStructAccess().getPropertyPropertyParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getNameSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getPropertyAccess().getNameSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getValueValueParserRuleCall_2_0()); }
	ruleValue{ after(grammarAccess.getPropertyAccess().getValueValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__IntValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getIntValueINTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getValueAccess().getIntValueINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__NintValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getNintValueNINTParserRuleCall_1_0()); }
	ruleNINT{ after(grammarAccess.getValueAccess().getNintValueNINTParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__DoubleValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getDoubleValueDOUBLEParserRuleCall_2_0()); }
	ruleDOUBLE{ after(grammarAccess.getValueAccess().getDoubleValueDOUBLEParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__StringValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getStringValueSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getValueAccess().getStringValueSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ArrayValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getArrayValueArrayParserRuleCall_4_0()); }
	ruleArray{ after(grammarAccess.getValueAccess().getArrayValueArrayParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__StructValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getStructValueStructParserRuleCall_5_0()); }
	ruleStruct{ after(grammarAccess.getValueAccess().getStructValueStructParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array__ValuesAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getValuesValueParserRuleCall_2_0_0()); }
	ruleValue{ after(grammarAccess.getArrayAccess().getValuesValueParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array__ValuesAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getValuesValueParserRuleCall_2_1_1_0()); }
	ruleValue{ after(grammarAccess.getArrayAccess().getValuesValueParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


