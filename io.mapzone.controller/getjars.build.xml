<?xml version="1.0"?>
<!--
 This Ant build script downloads dependency jars needed by thus bundle
 from several maven repositories on the net. See copy.properties for
 general settings. 
 -->
<project name="io.mapzone.controller" default="build" basedir="." xmlns:artifact="antlib:org.apache.maven.artifact.ant">
	<description>Download open source jars from the internet.</description>

	<property name="lib" value="${basedir}${file.separator}lib" />
	<property name="libs_src_dir" value="${lib}${file.separator}sources" />
	<property environment="env" />
	<dirname file="${ant.file.refresh_libs}" property="refresh_libs_basedir" />
    <available property="already_downloaded" type="dir" file="${lib}" />

    <!--
      Bootstrap: maven jars, ant task
      -->
    <property name="maven_download_dir" value="${user.home}/.m2/repository/org/apache/maven/maven-ant-tasks/2.0.10/" />
    <available property="bootstrapped" type="dir" file="${maven_download_dir}" />

    <target name="bootstrap" unless="bootstrapped">
        <mkdir dir="${maven_download_dir}" />
        <get src="http://central.maven.org/maven2/org/apache/maven/maven-ant-tasks/2.0.10/maven-ant-tasks-2.0.10.jar" 
             dest="${maven_download_dir}" />
    </target>
    
    <target name="init" depends="bootstrap">
        <taskdef uri="antlib:org.apache.maven.artifact.ant" resource="org/apache/maven/artifact/ant/antlib.xml">
            <classpath>
                <fileset dir="${maven_download_dir}">
                    <include name="*.jar" />
                </fileset>
            </classpath>
        </taskdef>
    </target>
    
	<target name="clean" description="deletes external libraries folder">
		<delete dir="${lib}" />
	</target>

	<target name="load_m2_deps" depends="init" unless="already_downloaded">
	    <!-- remote repositories -->
	    <artifact:remoteRepository id="central.repository" url="http://repo1.maven.org/maven2" />
	    <artifact:localRepository id="local.repository" path="${user.home}/.m2/repository" />

		<artifact:dependencies filesetId="dependency.fileset" sourcesFilesetId="sources.dependency.fileset" versionsId="dependency.versions" useScope="runtime">
			<localRepository refid="local.repository" />
			<remoteRepository refid="central.repository" />
		    
		    <!--dependency groupId="com.jcraft" artifactId="jsch" version="0.1.53" /-->
		    <dependency groupId="org.apache.httpcomponents" artifactId="httpclient" version="4.5" />
            <dependency groupId="org.apache.jclouds.api" artifactId="byon" version="1.9.1" />
            <dependency groupId="org.apache.jclouds.driver" artifactId="jclouds-sshj" version="1.9.1" />
            <dependency groupId="org.apache.jclouds.driver" artifactId="jclouds-jsch" version="1.9.1" />
            <dependency groupId="org.slf4j" artifactId="slf4j-simple" version="1.7.2" />
		</artifact:dependencies>
	</target>

	<target name="build" depends="create, load_m2_deps" unless="already_downloaded">
		<description>Download the jars - used by a manual "clean"</description>

		<!-- (flat) copy all downloaded JARs (classes) to plugin directory ${lib} -->
		<copy todir="${lib}" verbose="true" flatten="true">
			<fileset refid="dependency.fileset" />
		</copy>

		<!-- (flat) copy downloaded source JARs (sources) to plugin directory ${libs_src_dir} -->
		<copy todir="${libs_src_dir}" flatten="true" verbose="true">
			<fileset refid="sources.dependency.fileset" />
			<chainedmapper>
				<mapper type="flatten" />
				<globmapper from="*-sources.jar" to="*-sources.zip" />
			</chainedmapper>
		</copy>
		<!-- <eclipse.refreshLocal resource="net.refractions.udig.libs/lib" depth="infinite"/>	-->
	</target>

	<target name="create" unless="already_downloaded">
		<description>creates the lib directory if needed</description>
		<mkdir dir="${lib}" />
		<mkdir dir="${libs_src_dir}" />
	</target>

	<!-- Used by headless build please make sure this does everthing from clean to download and fix etc.. -->
	<target name="full-build" depends="clean, build" description="clean and build">
	</target>
</project>
